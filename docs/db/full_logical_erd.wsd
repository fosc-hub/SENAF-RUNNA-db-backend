"@startuml full_logical_erd"

!define PRIMARY_KEY(x) <b><color:blue>x</color></b>
!define FOREIGN_KEY(x) <color:green>x</color>
!define COMPOSITE_KEY(x, y) <color:LightSalmon>x, y</color>

entity T_SCORE_DEMANDA {
    + PRIMARY_KEY(id)
    --
    ultima_actualizacion : datetime, null=False, autogenerate
    score : float, null=False
    score_condiciones_vulnerabilidad : float, null=False
    score_vulneracion : float, null=False
    score_motivo_intervencion : float, null=False
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : OneToOneField, on_delete=CASCADE, unique=True, null=False, blank=False
    --
}

entity T_DEMANDA {
    + PRIMARY_KEY(id)
    --
    fecha_y_hora_ingreso : datetime, null=False, default=datetime.now()
    origen : (
        WEB,
        TELEFONO,
        MAIL,
        PERSONAL,
        OTRO
    ) : null=False
    nro_notificacion_102 : int, nullable
    nro_sac : int, nullable
    nro_suac : int, nullable
    nro_historia_clinica : int, nullable
    nro_oficio_web : int, nullable
    descripcion : text, nullable
    ultima_actualizacion : datetime, null=False, autogenerate
    --
    localizacion: FOREIGN_KEY(T_LOCALIZACION) : on_delete=PROTECT, null=False
    usuario_externo: FOREIGN_KEY(T_USUARIO_EXTERNO) : on_delete=SET_NULL, null=True, blank=True
    --
}

entity T_LOCALIZACION_PERSONA {
    + COMPOSITE_KEY(T_LOCALIZACION, T_PERSONA)
    --
    principal : bool, default=false
    --
    localizacion: FOREIGN_KEY(T_LOCALIZACION) : on_delete=CASCADE, null=False
    persona: FOREIGN_KEY(T_PERSONA) : on_delete=CASCADE, null=False
    --
}

entity T_DEMANDA_ASIGNADO {
    + COMPOSITE_KEY(T_USER, T_DEMANDA)
    --
    esta_activo : bool, default=true
    recibido : bool, default=false
    comentarios : text, null=True, blank=True
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    user: FOREIGN_KEY(T_USER) : on_delete=CASCADE, null=False
    --
    AsignarUser(
        user.esta_activo
        )
}

entity T_PRECALIFICACION_DEMANDA {
    + PRIMARY_KEY(id)
    --
    fecha_y_hora : datetime, null=False, default=datetime.now()
    descripcion : text, null=False, blank=False
    estado_demanda : (
        URGENTE,
        NO_URGENTE,
        COMPLETAR
    ) : null=False, blank=False
    ultima_actualizacion : datetime, null=False, autogenerate
    --
    demanda: FOREIGN_KEY(T_DEMANDA on_delete=cascade null=False blank=False unique=True One-to-One)
}

entity T_LOCALIZACION {
    + PRIMARY_KEY(id)
    --
    calle : string, null=False, blank=False
    tipo_calle : (
        CALLE,
        AVENIDA,
        PASAJE,
        RUTA,
        BOULEVARD,
        OTRO
    ) : null=False, blank=False
    piso_depto : int, nullable
    lote : int, nullable
    mza : int, nullable
    casa_nro : int, nullable
    referencia_geo : text, null=False, blank=False
    --
    barrio : FOREIGN_KEY(T_BARRIO) : on_delete=SET_NULL, null=True, blank=True
    localidad : FOREIGN_KEY(T_LOCALIDAD) : on_delete=CASCADE, null=False
    cpc : FOREIGN_KEY(T_CPC) : on_delete=SET_NULL, null=True, blank=True
    --
    ValidarConAPI(
        calle,
        numero,
        barrio,
        localidad,
        provincia
        )
}

entity T_CONDICIONES_VULNERABILIDAD {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    descripcion : text, null=True, blank=True
    peso : int, null=False, blank=False

    nnya : bool, null=False, blank=False
    adulto : bool, null=False, blank=False

    --
    --
}

entity T_PERSONA_CONDICIONES_VULNERABILIDAD {
    + COMPOSITE_KEY(T_NNyA, T_CONDICIONES_VULNERABILIDAD)
    --
    si_no : bool, null=False, blank=False
    -- 
    persona: FOREIGN_KEY(T_PERSONA) : on_delete=CASCADE, null=False
    condicion_vulnerabilidad: FOREIGN_KEY(T_CONDICIONES_VULNERABILIDAD) : on_delete=CASCADE, null=False
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=SET_NULL, null=True, blank=True
    --
}

entity T_MOTIVO_INTERVENCION {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False
    descripcion : text, nullable
    peso : int, null=False
    --
}

entity T_DEMANDA_MOTIVO_INTERVENCION {
    + COMPOSITE_KEY(T_NNyA, T_MOTIVO_INTERVENCION)
    --
    si_no : bool, null=False, blank=False
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    motivo_intervencion: FOREIGN_KEY(T_MOTIVO_INTERVENCION) : on_delete=CASCADE, null=False
    --
}

entity T_NNyA_EDUCACION {
    + PRIMARY_KEY(id)
    --
    curso : string, null=False, blank=False
    nivel : (
        PRIMARIO,
        SECUNDARIO,
        TERCIARIO,
        UNIVERSITARIO,
        OTRO
    ) : null=False, blank=False
    turno : (
        MANIANA,
        TARDE,
        NOCHE,
        OTRO
    ) : null=False, blank=False
    comentarios : text, null=True, blank=True
    --
    institucion_educativa: FOREIGN_KEY(T_INSTITUCION_EDUCATIVA) : on_delete=CASCADE, null=False, blank=False
    nnya: FOREIGN_KEY(T_PERSONA) : OneToOneField, on_delete=CASCADE, null=False, blank=False
    --
}

entity T_PERSONA {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    apellido : string, null=False, blank=False
    fecha_nacimiento : date, null=True, blank=True
    edad_aproximada : int, null=True, blank=True

    dni : int, null=True, blank=True
    situacion_dni : (
        EN_TRAMITE,
        VENCIDO,
        EXTRAVIADO,
        INEXISTENTE,
        VALIDO,
        OTRO
    ) : null=False, blank=False
    genero : (
        MASCULINO,
        FEMENINO,
        OTRO
    ) : null=False, blank=False

    boton_antipanico : bool, default=False
    observaciones : text, null=True, blank=True
    adulto : bool, null=False, blank=False
    nnya : bool, null=False, blank=False

    --
    --
}

entity T_DEMANDA_PERSONA {
    + COMPOSITE_KEY(T_DEMANDA, T_PERSONA)
    --
    conviviente : bool, null=False, blank=False
    supuesto_autordv : bool, null=False, blank=False
    supuesto_autordv_principal : bool, null=False, blank=False
    nnya : bool, null=False, blank=False
    nnya_principal : bool, null=False, blank=False
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    persona: FOREIGN_KEY(T_PERSONA) : on_delete=CASCADE, null=False
    --
}

entity T_VINCULO_PERSONA {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    --
    --
}

entity T_VINCULO_PERSONA_PERSONA {
    + COMPOSITE_KEY(T_PERSONA, T_PERSONA)
    --
    conviven : bool, null=False, blank=False
    autordv : bool, null=False, blank=False
    garantiza_proteccion : bool, null=False, blank=False
    --
    persona_1: FOREIGN_KEY(T_PERSONA) : on_delete=CASCADE, null=False, related_name=persona_1
    persona_2: FOREIGN_KEY(T_PERSONA) : on_delete=CASCADE, null=False, related_name=persona_2
    vinculo: FOREIGN_KEY(T_VINCULO_PERSONA) : on_delete=SET_NULL, null=True, blank=True
    --
}

entity T_USUARIO_EXTERNO {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False
    apellido : string, null=False
    fecha_nacimiento : date, null=True, blank=True
    genero : (
        MASCULINO,
        FEMENINO,
        OTRO
    ) : null=False, blank=False
    telefono : int, null=False, blank=False
    mail : mail, null=False, blank=False, unique=True
    --
    vinculo: FOREIGN_KEY(T_VINCULO_USUARIO_EXTERNO) : on_delete=CASCADE, null=False
    institucion: FOREIGN_KEY(T_INSTITUCION_USUARIO_EXTERNO) : on_delete=CASCADE, null=False
    --
}

entity T_INSTITUCION_USUARIO_EXTERNO {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    mail : mail, null=True, blank=True
    telefono : int, null=True, blank=True
    --
    localizacion : FOREIGN_KEY(T_LOCALIZACION) : on_delete=SET_NULL, null=True, blank=True
}


entity T_VULNERACION {
    + PRIMARY_KEY(id)
    --
    principal_demanda : bool, default=false
    transcurre_actualidad : bool, default=false
    sumatoria_de_pesos : int, default=0
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=SET_NULL, null=True, blank=True
    nnya: FOREIGN_KEY(T_PERSONA) : on_delete=CASCADE, null=False, blank=False, related_name=vulneracion_nnya
    autor_dv: FOREIGN_KEY(T_PERSONA) : on_delete=SET_NULL, null=True, blank=True, related_name=vulneracion_autordv
    categoria_motivo: FOREIGN_KEY(T_CATEGORIA_MOTIVO) : on_delete=CASCADE, null=False
    categoria_submotivo: FOREIGN_KEY(T_CATEGORIA_SUBMOTIVO) : on_delete=CASCADE, null=False
    gravedad_vulneracion: FOREIGN_KEY(T_GRAVEDAD_VULNERACION) : on_delete=CASCADE, null=False
    urgencia_vulneracion: FOREIGN_KEY(T_URGENCIA_VULNERACION) : on_delete=CASCADE, null=False
    --
    TriggerOnInsert(
        unique(T_DEMANDA, principal=true),
        T_SCORE_DEMANDA.score_vulneracion += sumatoria_de_pesos
        T_SCORE_DEMANDA.score += sumatoria_de_pesos
    )
}

entity T_ACTIVIDAD {
    + PRIMARY_KEY(id)
    --
    fecha_y_hora : datetime, null=False, autogenerate
    descripcion : text, null=False, blank=False
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    tipo: FOREIGN_KEY(T_ACTIVIDAD_TIPO) : on_delete=SET_NULL, null=True, blank=True
    institucion: FOREIGN_KEY(T_INSTITUCION_ACTIVIDAD) : on_delete=SET_NULL, null=True, blank=True
    --
}

entity T_RESPUESTA {
    + PRIMARY_KEY(id)
    --
    fecha_y_hora : datetime, null=False, autogenerate
    mail : mail, null=False, blank=False
    mensaje : text, null=False, blank=False
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    institucion: FOREIGN_KEY(T_INSTITUCION_RESPUESTA) : on_delete=SET_NULL, null=True, blank=True
    --
    ServicioDeMailSMTP(
        mail,
        mensaje
        )
}

entity T_DEMANDA_VINCULADA {
    + COMPOSITE_KEY(T_DEMANDA, T_DEMANDA)
    --
    --
    demanda_1: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    demanda_2: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    --
}

entity T_DECISION {
    + PRIMARY_KEY(id)
    --
    fecha_y_hora : datetime, autogenerate
    justificacion : text, null=False, blank=False
    decision : (
        APERTURA_DE_LEGAJO,
        RECHAZAR_CASO
    ) : null=False
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    --
    TriggerOnInsert(
        CreationOfLegajo(
            dropdown : "Apertura de legajo"
             || T_SCORE_DEMANDA.score > 10
             || T_SCORE_DEMANDA.score_vulneracion > 10
             || T_SCORE_DEMANDA.score_evaluacion > 10
             || T_SCORE_DEMANDA.score_condiciones_vulnerabilidad > 10
             || T_SCORE_DEMANDA.score_motivo_intervencion > 10
            bool : true
        )
        CreationOfMPI_MPE(
            dropdown : "Apertura de legajo" 
             || T_SCORE_DEMANDA.score > 10
             || T_SCORE_DEMANDA.score_vulneracion > 10
             || T_SCORE_DEMANDA.score_evaluacion > 10
             || T_SCORE_DEMANDA.score_condiciones_vulnerabilidad > 10
             || T_SCORE_DEMANDA.score_motivo_intervencion > 10
            bool : true
        )
        RechazarCaso(
            dropdown : "Rechazar el caso"
            bool : true
        )
    )
}

entity T_INDICADORES_VALORACION {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    descripcion : text, null=True, blank=True
    peso : int, default=0
    --
}

entity T_EVALUACIONES {
    + PRIMARY_KEY(id)
    --
    si_no : bool, null=False, blank=False
    --
    demanda: FOREIGN_KEY(T_DEMANDA) : on_delete=CASCADE, null=False
    indicador: FOREIGN_KEY(T_INDICADORES_VALORACION) : on_delete=CASCADE, null=False
    --
    TriggerOnInsert(
        T_SCORE_DEMANDA.score += T_INDICADORES_VALORACION.peso
        T_SCORE_DEMANDA.score_evaluacion += T_INDICADORES_VALORACION.peso
        )
}

entity T_LEGAJO {
    + PRIMARY_KEY(id)
    --
    info_legajo : text, null=False, blank=False
    --
    nnya: FOREIGN_KEY(T_PERSONA) : OneToOneField, on_delete=CASCADE, null=False, blank=False
    --
}

entity T_LEGAJO_ASIGNADO {
    + COMPOSITE_KEY(T_USER, T_LEGAJO)
    --
    esta_activo : bool, default=true
    recibido : bool, default=false
    comentarios : text, null=True, blank=True
    --
    legajo: FOREIGN_KEY(T_LEGAJO) : on_delete=CASCADE, null=False
    user: FOREIGN_KEY(T_USER) : on_delete=CASCADE, null=False
    --
    AsignarUser(
        user.esta_activo
        )
}

class AbstractBaseUser {
    + password : Charfield
    + last_login : blank=True, null=True
    + is_active : default=True
    
    --
    __str__()
    + save()
    + get_username()
    + clean()
    + natural_key()
    + set_password( make_password() )
    + check_password()
    + acheck_password
    + set_unusable_password()
    + has_usable_password()
    + get_session_auth_hash()
    + get_session_auth_fallback_hash()
    + _get_session_auth_hash()
    --
    @property : is_anonymous()
    @property : is_authenticated()
    --
    @classmethod : get_email_field_name()
    @classmethod : normalize_username()
}

class PermissionsMixin {
    + is_superuser
    + groups : ManyToManyField(Group)
    + user_permissions : ManyToManyField(Permission)

    --
    get_user_permissions()
    get_group_permissions()
    get_all_permissions()
    has_perm()
    has_perms()
    has_module_perms()
    --
}

class AbstractUser {
    + username : unique, null=True
    + first_name : blank=True
    + last_name : blank=True
    + email : unique, blank=True
    + is_staff : default=False
    + date_joined : default=timezone.now
    - EMAIL_FIELD : "email"
    - USERNAME_FIELD : "username"
    - REQUIRED_FIELDS : ["email"]

    --
    + clean() : normalize_email(self.email)
    + get_full_name()
    + get_short_name()
    + email_user()
    --
}

class CustomUser {
    + fecha_nacimiento : null=True, blank=True
    + genero : MASCULINO, FEMENINO, OTRO
    + telefono : null=True, blank=True
    --
    + localidad : FOREIGN_KEY(T_LOCALIDAD) : on_delete=SET_NULL, null=True, blank=True
    --
}

AbstractBaseUser <|-- AbstractUser
PermissionsMixin <|-- AbstractUser
AbstractUser <|-- CustomUser

entity T_USER {
    + PRIMARY_KEY(id)
    + password
    + last_login : blank=True, null=True
    + username : unique, null=True
    + first_name : blank=True
    + last_name : blank=True
    + email : unique, blank=True
    + is_staff : default=False
    + is_active : default=True
    + date_joined : default=timezone.now
    + is_superuser : default=False
    + fecha_nacimiento : null=True, blank
    + genero : MASCULINO, FEMENINO, OTRO
    + telefono : null=True, blank
    --
    + localidad : FOREIGN_KEY(T_LOCALIDAD) : on_delete=SET_NULL, null=True, blank=True
    --
}

CustomUser <|-- T_USER

entity T_CATEGORIA_MOTIVO {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    descripcion : text, null=True, blank=True
    peso : int, null=False, blank=False
    --
    --
}

entity T_CATEGORIA_SUBMOTIVO {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    descripcion : text, null=True, blank=True
    peso : int, null=False, blank=False
    --
    motivo : FOREIGN_KEY(T_CATEGORIA_MOTIVO) : on_delete=CASCADE, null=False
    --
}

entity T_URGENCIA_VULNERACION {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False
    descripcion : text, null=False
    peso : int, null=False, blank=False
    --
}

entity T_GRAVEDAD_VULNERACION {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False
    descripcion : text, null=False
    peso : int, null=False, blank=False
    --
}

entity T_BARRIO {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    --
    localidad : FOREIGN_KEY(T_LOCALIDAD) : on_delete=CASCADE, null=False
}

entity T_CPC {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    --
    localidad : FOREIGN_KEY(T_LOCALIDAD) : on_delete=CASCADE, null=False
}

entity T_DEPARTAMENTO {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    --
    provincia : FOREIGN_KEY(T_PROVINCIA) : on_delete=CASCADE, null=False
    --
}

entity T_LOCALIDAD {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    --
    departamento : FOREIGN_KEY(T_DEPARTAMENTO) : on_delete=CASCADE, null=False
}

entity T_PROVINCIA {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    --
}

entity T_VINCULO_USUARIO_EXTERNO {
    + PRIMARY_KEY(id)
    --
    nombre : null=False, blank=False
    descripcion : text, null=True, blank=True
    --
}

entity T_INSTITUCION_ACTIVIDAD {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    mail : mail, null=True, blank=True
    telefono : int, null=True, blank=True
    --
    localizacion : FOREIGN_KEY(T_LOCALIZACION) : on_delete=SET_NULL, null=True, blank=True
    --
}

entity T_INSTITUCION_RESPUESTA {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    mail : mail, null=True, blank=True
    telefono : int, null=True, blank=True
    --
    localizacion : FOREIGN_KEY(T_LOCALIZACION) : on_delete=SET_NULL, null=True, blank=True
}

entity T_INSTITUCION_EDUCATIVA {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    mail : mail, null=True, blank=True
    telefono : int, null=True, blank=True
    --
    localizacion : FOREIGN_KEY(T_LOCALIZACION) : on_delete=SET_NULL, null=True, blank=True
}

entity T_INSTITUCION_SANITARIA {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    mail : mail, null=True, blank=True
    telefono : int, null=True, blank=True
    --
    localizacion : FOREIGN_KEY(T_LOCALIZACION) : on_delete=SET_NULL, null=True, blank=True
}

entity T_NNyA_SALUD {
    + PRIMARY_KEY(id)
    --
    observaciones : text, null=True, blank=True
    --
    institucion_sanitaria: FOREIGN_KEY(T_INSTITUCION_SANITARIA) : on_delete=CASCADE, null=False, blank=False
    nnya: FOREIGN_KEY(T_PERSONA) : OneToOneField, on_delete=CASCADE, null=False, blank=False
    --
}

entity T_NNyA_SCORE {
    + PRIMARY_KEY(id)
    --
    ultima_actualizacion : datetime, null=False, autogenerate
    score : float, null=False
    score_condiciones_vulnerabilidad : float, null=False
    score_vulneracion : float, null=False
    score_motivo_intervencion : float, null=False
    --
    nnya: FOREIGN_KEY(T_PERSONA) : OneToOneField, on_delete=CASCADE, null=False, blank=False
    --
}

entity T_ACTIVIDAD_TIPO {
    + PRIMARY_KEY(id)
    --
    nombre : string, null=False, blank=False
    --
}

T_DEMANDA_ASIGNADO "*" -- "1" T_USER
T_DEMANDA "1" -- "*" T_DEMANDA_ASIGNADO
T_DEMANDA "1" -- "1" T_PRECALIFICACION_DEMANDA

T_DEMANDA "*" -- "1" T_LOCALIZACION
T_LOCALIZACION "*" -- "1" T_BARRIO
T_LOCALIZACION "*" -- "1" T_LOCALIDAD
T_LOCALIZACION "*" -- "1" T_CPC
T_LOCALIDAD "*" -- "1" T_PROVINCIA
T_LOCALIDAD "*" -- "1" T_DEPARTAMENTO

T_LOCALIZACION "1" -- "*" T_INSTITUCION_ACTIVIDAD
T_LOCALIZACION "1" -- "*" T_INSTITUCION_RESPUESTA
T_LOCALIZACION "1" -- "*" T_INSTITUCION_EDUCATIVA
T_LOCALIZACION "1" -- "*" T_INSTITUCION_SANITARIA
T_LOCALIZACION "1" -- "*" T_INSTITUCION_USUARIO_EXTERNO

T_LOCALIZACION "1" -- "*" T_LOCALIZACION_PERSONA
T_PERSONA "1" -- "*" T_LOCALIZACION_PERSONA

T_PERSONA "1" -- "1" T_NNyA_EDUCACION
T_NNyA_EDUCACION "*" -- "1" T_INSTITUCION_EDUCATIVA
T_PERSONA "1" -- "1" T_NNyA_SALUD
T_NNyA_SALUD "*" -- "1" T_INSTITUCION_SANITARIA
T_PERSONA "1" -- "*" T_PERSONA_CONDICIONES_VULNERABILIDAD
T_PERSONA_CONDICIONES_VULNERABILIDAD "*" -- "1" T_CONDICIONES_VULNERABILIDAD
T_DEMANDA "1" -- "*" T_DEMANDA_MOTIVO_INTERVENCION
T_DEMANDA_MOTIVO_INTERVENCION "*" -- "1" T_MOTIVO_INTERVENCION

T_SCORE_DEMANDA "1" -- "1" T_DEMANDA
T_NNyA_SCORE "1" -- "1" T_PERSONA

T_DEMANDA_PERSONA "*" -- "1" T_DEMANDA
T_PERSONA "1" -- "*" T_DEMANDA_PERSONA

T_VINCULO_PERSONA_PERSONA "*" -- "1" T_PERSONA
T_VINCULO_PERSONA "1" -- "*" T_VINCULO_PERSONA_PERSONA

T_DEMANDA "*" -- "1" T_USUARIO_EXTERNO
T_USUARIO_EXTERNO "*" -- "1" T_VINCULO_USUARIO_EXTERNO

T_USUARIO_EXTERNO "*" -- "1" T_INSTITUCION_USUARIO_EXTERNO

T_DEMANDA "1" -- "*" T_VULNERACION
T_CATEGORIA_MOTIVO "1" -- "*" T_CATEGORIA_SUBMOTIVO
T_CATEGORIA_MOTIVO "1" -- "*" T_VULNERACION
T_CATEGORIA_SUBMOTIVO "1" -- "*" T_VULNERACION

T_VULNERACION "*" -- "1" T_GRAVEDAD_VULNERACION
T_VULNERACION "*" -- "1" T_URGENCIA_VULNERACION

T_PERSONA "1" -- "*" T_VULNERACION
T_PERSONA "1" -- "*" T_VULNERACION

T_ACTIVIDAD "*" -- "1" T_DEMANDA
T_ACTIVIDAD "*" -- "1" T_ACTIVIDAD_TIPO
T_ACTIVIDAD "*" -- "1" T_INSTITUCION_ACTIVIDAD

T_RESPUESTA "*" -- "1" T_DEMANDA
T_RESPUESTA "*" -- "1" T_INSTITUCION_RESPUESTA

T_DEMANDA_VINCULADA "*" -- "1" T_DEMANDA
T_DEMANDA_VINCULADA "*" -- "1" T_DEMANDA

T_DECISION "*" -- "1" T_DEMANDA
T_DEMANDA "1" -- "*" T_EVALUACIONES
T_EVALUACIONES "*" -- "1" T_INDICADORES_VALORACION

T_LEGAJO "1" -- "1" T_PERSONA

T_LEGAJO_ASIGNADO "*" -- "1" T_USER
T_LEGAJO "1" -- "*" T_LEGAJO_ASIGNADO

@enduml

' DemandasVinculadas : Conexiones de la demanda : caso1=fkDemanda, caso2=fkDemanda
' caratula : identificar legajo o expediente
' la caratula identifica el NNyA al que se le genera la demanda
' el legajo deberia estar relacionado con la caratula, ¿ osea el NNyA principal ?
