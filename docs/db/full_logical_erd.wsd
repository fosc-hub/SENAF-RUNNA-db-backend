"@startuml full_logical_erd"

!define PRIMARY_KEY(x) <b><color:blue>x</color></b>
!define FOREIGN_KEY(x) <color:green>x</color>
!define COMPOSITE_KEY(x, y) <color:LightSalmon>x, y</color>

entity T_DEMANDA {
    + PRIMARY_KEY(id)
    --
    fecha_ingreso = date, not null
    hora_ingreso = time, not null
    origen = (
        WEB,
        TELEFONO,
        MAIL,
        PERSONAL,
        OTRO
    ) = not null
    nro_notificacion_102 = int, nullable
    nro_sac = int, nullable
    nro_suac = int, nullable
    nro_historia_clinica = int, nullable
    nro_oficio_web = int, nullable
    descripcion = text, nullable
    ultima_actualizacion = date, not null, autogenerate
    score = int, default=0
    score_vulneracion = int, default=0
    score_evaluacion = int, default=0
    --
    FOREIGN_KEY(T_LOCALIZACION) = not null
    FOREIGN_KEY(T_USUARIO_LINEA) = not null
    --
}

entity T_DEMANDA_ASIGNADO {
    + COMPOSITE_KEY(T_USER, T_DEMANDA)
    --
    esta_activo = bool 'sigue en curso la verificacion / archivar=false
    recibido = bool ' casilla mail = leido/no leido
    comentarios
    --
    FOREIGN_KEY(T_USER)
    FOREIGN_KEY(T_DEMANDA)
    --
    AsignarUser(
        user.esta_activo
        )
}

entity T_PRECALIFICACION_DEMANDA {
    + PRIMARY_KEY(id)
    --
    fecha
    hora
    descripcion
    estado_demanda = (
        URGENTE,
        NO_URGENTE,
        COMPLETAR
    )
    --
    FOREIGN_KEY(T_DEMANDA on_delete=cascade null=False blank=False unique=True)
}

entity T_LOCALIZACION {
    + PRIMARY_KEY(id)
    --
    calle
    tipo_calle = (
        CALLE,
        AVENIDA,
        PASAJE,
        RUTA,
        BOULEVAR,
        OTRO
    )
    calle_nro
    piso_depto
    lote
    mza
    casa_nro
    referencia_geo
    --
    FOREIGN_KEY(T_BARRIO)
    FOREIGN_KEY(T_LOCALIDAD)
    FOREIGN_KEY(T_CPC)
    --
    ValidarConAPI(
        calle,
        numero,
        barrio,
        localidad,
        provincia
        )
}

entity T_NNyA {
    + PRIMARY_KEY( FOREIGN_KEY(T_PERSONA) )
    --
    --
    FOREIGN_KEY(T_NNyA_EDUCACION)
    FOREIGN_KEY(T_INSTITUCION_SANITARIA)
    FOREIGN_KEY(T_PERSONA One-to-One)
    --
    ValidarAdultoFalse(
        persona.adulto,
        persona.fecha_nacimiento
        )
}

entity T_CONDICIONES_VULNERABILIDAD {
    + PRIMARY_KEY(id)
    --
    nombre
    descripcion
    peso = int
    --
}

entity T_NNyA_CONDICIONES_VULNERABILIDAD {
    + COMPOSITE_KEY(T_NNyA, T_CONDICIONES_VULNERABILIDAD)
    --
    si_no = bool
    --
    FOREIGN_KEY(T_NNyA)
    FOREIGN_KEY(T_CONDICIONES_VULNERABILIDAD)
    --
}

entity T_MOTIVO_INTERVENCION {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_NNyA_MOTIVO_INTERVENCION {
    + COMPOSITE_KEY(T_NNyA, T_MOTIVO_INTERVENCION)
    --
    motivo_principal = bool
    --
    FOREIGN_KEY(T_NNyA)
    FOREIGN_KEY(T_MOTIVO_INTERVENCION)
    --
}

entity T_NNyA_EDUCACION {
    + PRIMARY_KEY(id)
    --
    curso
    nivel
    turno
    comentarios
    --
    FOREIGN_KEY(T_INSTITUCION_EDUCATIVA)
    --
}

entity T_PERSONA {
    + PRIMARY_KEY(id)
    --
    nombre
    apellido
    fecha_nacimiento
    edad_aproximada
    dni
    situacion_dni = (
        EN_TRAMITE,
        VENCIDO,
        EXTRAVIADO,
        INEXISTENTE,
        VALIDO,
        OTRO
    )
    genero = (
        MASCULINO,
        FEMENINO,
        OTRO
    )
    boton_antipanico = bool
    observaciones
    adulto = bool
    nnya = bool
    --
    --
}

entity T_DEMANDA_PERSONA {
    + COMPOSITE_KEY(T_DEMANDA, T_PERSONA)
    --
    conviviente = bool
    supuesto_autordv = bool
    supuesto_autordv_principal = bool
    nnya = bool
    nnya_principal = bool
    --
    FOREIGN_KEY(T_DEMANDA)
    FOREIGN_KEY(T_PERSONA)
    --
}

entity T_VINCULO {
    + PRIMARY_KEY(id)
    --
    nombre
    --
    --
}

entity T_VINCULO_PERSONA_NNyA {
    + COMPOSITE_KEY(T_PERSONA, T_NNyA)
    --
    conviven = bool
    autordv = bool
    garantiza_proteccion = bool (validar que sea adulto)
    --
    FOREIGN_KEY(T_VINCULO)
    FOREIGN_KEY(T_NNyA)
    FOREIGN_KEY(T_PERSONA)
    --
}

entity T_VINCULO_PERSONA_PERSONA {
    + COMPOSITE_KEY(T_PERSONA, T_PERSONA)
    --
    conviven = bool
    --
    FOREIGN_KEY(T_VINCULO)
    FOREIGN_KEY(T_PERSONA)
    FOREIGN_KEY(T_PERSONA)
    --
}

entity T_USUARIO_LINEA {
    + PRIMARY_KEY(id)
    --
    nombre
    apellido
    fecha_nacimiento
    sexo
    telefono
    --
    FOREIGN_KEY(T_VINCULO_USUARIO_LINEA)
    FOREIGN_KEY(T_INSTITUCION_USUARIO_LINEA)
    FOREIGN_KEY(T_RESPONSABLE)
    --
}

entity T_INSTITUCION_USUARIO_LINEA {
    + PRIMARY_KEY(id)
    --
    nombre
    contacto
    --
}

entity T_RESPONSABLE {
    + PRIMARY_KEY(id)
    --
    nombre
    apellido
    --
    FOREIGN_KEY(T_CARGO)
}

entity T_VULNERACION {
    + PRIMARY_KEY(id)
    --
    principal_demanda = bool
    actualidad = bool
    sumatoria_de_pesos = int    -- sumatoria de pesos de las categorias
    --
    FOREIGN_KEY(T_DEMANDA)
    NNyA = FOREIGN_KEY(T_PERSONA nnya=true nullable=false blank=false)
    AutorDV = FOREIGN_KEY(T_PERSONA autordv=true nullable=true blank=true)
    FOREIGN_KEY(T_CATEGORIA_MOTIVO)
    FOREIGN_KEY(T_CATEGORIA_SUBMOTIVO)
    FOREIGN_KEY(T_GRAVEDAD_VULNERACION)
    FOREIGN_KEY(T_URGENCIA_VULNERACION)
    --
    TriggerOnInsert(
        unique(T_DEMANDA, principal=true),
        T_DEMANDA.score_vulneracion += sumatoria_de_pesos
        T_DEMANDA.score += sumatoria_de_pesos
    )
}

entity T_ACTIVIDAD {
    + PRIMARY_KEY(id)
    --
    fecha
    hora
    descripcion
    --
    FOREIGN_KEY(T_DEMANDA)
    FOREIGN_KEY(T_ACTIVIDAD_TIPO)
    FOREIGN_KEY(T_INSTITUCION_ACTIVIDAD)
    --
}

entity T_RESPUESTA {
    + PRIMARY_KEY(id)
    --
    fecha
    hora
    mail
    mensaje
    --
    FOREIGN_KEY(T_DEMANDA)
    FOREIGN_KEY(T_INSTITUCION_RESPUESTA)
    --
    ServicioDeMailSMTP(
        mail,
        mensaje
        )
}

entity T_DEMANDA_VINCULADA {
    + PRIMARY_KEY(id)
    --
    --
    FOREIGN_KEY(T_DEMANDA)
    FOREIGN_KEY(T_DEMANDA)
    --
}

entity T_DECISION {
    + PRIMARY_KEY(id)
    --
    fecha
    hora
    justificacion = text
    decision = (
        APERTURA DE LEGAJO,
        RECHAZAR CASO
    )
    --
    FOREIGN_KEY(T_DEMANDA)
    --
    TriggerOnInsert(
        CreationOfLegajo(
            dropdown = "Apertura de legajo" || T_DEMANDA.score > 10 || T_DEMANDA.score_vulneracion > 10 || T_DEMANDA.score_evaluacion > 10
            bool = true
        )
        CreationOfMPI_MPE(
            dropdown = "Apertura de legajo"  || T_DEMANDA.score > 10 || T_DEMANDA.score_vulneracion > 10 || T_DEMANDA.score_evaluacion > 10
            bool = true
        )
        RechazarCaso(
            dropdown = "Rechazar el caso"
            bool = true
        )
    )
}

entity T_INDICADORES_VALORACION {
    + PRIMARY_KEY(id)
    --
    nombre
    descripcion
    peso = int
    --
    --
}

entity T_EVALUACIONES {
    + PRIMARY_KEY(id)
    --
    si_no = bool
    --
    FOREIGN_KEY(T_DEMANDA)
    FOREIGN_KEY(T_INDICADORES_VALORACION)
    --
    TriggerOnInsert(
        T_DEMANDA.score += T_INDICADORES_VALORACION.peso
        T_DEMANDA.score_evaluacion += T_INDICADORES_VALORACION.peso
        )
}

entity T_LEGAJO {
    + PRIMARY_KEY(id)
    --
    info_legajo
    --
    FOREIGN_KEY(T_NNyA)
    --
}

entity T_LEGAJO_ASIGNADO {
    + COMPOSITE_KEY(T_USER, T_LEGAJO)
    --
    esta_activo = bool 'sigue en curso la verificacion / archivar=false
    recibido = bool ' casilla mail = leido/no leido
    --
    FOREIGN_KEY(T_USER)
    FOREIGN_KEY(T_LEGAJO)
    --
    AsignarUser(
        user.esta_activo
        )
}

entity T_USER {
    + PRIMARY_KEY(id)
    --
    nombre
    apellido
    fecha_nacimiento
    sexo
    telefono
    email
    --
    --
}

entity T_CARGO {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_CATEGORIA_MOTIVO {
    + PRIMARY_KEY(id)
    --
    nombre
    peso = int
    --
    --
}

entity T_CATEGORIA_SUBMOTIVO {
    + PRIMARY_KEY(id)
    --
    nombre
    peso = int
    --
    FOREIGN_KEY(T_CATEGORIA_MOTIVO)
    --
}

entity T_URGENCIA_VULNERACION {
    + PRIMARY_KEY(id)
    --
    nombre
    peso = int
    --
}

entity T_GRAVEDAD_VULNERACION {
    + PRIMARY_KEY(id)
    --
    nombre
    peso = int
    --
}

entity T_BARRIO {
    + PRIMARY_KEY(id)
    --
    nombre
}

entity T_CPC {
    + PRIMARY_KEY(id)
    --
    nombre
}

entity T_DEPARTAMENTO {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_LOCALIDAD {
    + PRIMARY_KEY(id)
    --
    nombre
    --
    FOREIGN_KEY(T_PROVINCIA)
    FOREIGN_KEY(T_DEPARTAMENTO)
}

entity T_PROVINCIA {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_VINCULO_USUARIO_LINEA {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_INSTITUCION_ACTIVIDAD {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_INSTITUCION_RESPUESTA {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_INSTITUCION_EDUCATIVA {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_INSTITUCION_SANITARIA {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}

entity T_ACTIVIDAD_TIPO {
    + PRIMARY_KEY(id)
    --
    nombre
    --
}


T_DEMANDA_ASIGNADO "*" - "1" T_USER
T_DEMANDA "1" - "*" T_DEMANDA_ASIGNADO
T_DEMANDA "1" -- "1" T_PRECALIFICACION_DEMANDA

T_DEMANDA "*" -- "1" T_LOCALIZACION
T_LOCALIZACION "*" -- "1" T_BARRIO
T_LOCALIZACION "*" -- "1" T_LOCALIDAD
T_LOCALIZACION "*" -- "1" T_CPC
T_LOCALIDAD "*" -- "1" T_PROVINCIA
T_LOCALIDAD "*" -- "1" T_DEPARTAMENTO

T_NNyA "1" - "1" T_PERSONA
T_NNyA "1" -- "1" T_NNyA_EDUCACION
T_NNyA_EDUCACION "*" -- "1" T_INSTITUCION_EDUCATIVA
T_NNyA "*" -- "1" T_INSTITUCION_SANITARIA
T_NNyA "1" -- "*" T_NNyA_CONDICIONES_VULNERABILIDAD
T_NNyA_CONDICIONES_VULNERABILIDAD "*" -- "1" T_CONDICIONES_VULNERABILIDAD
T_NNyA "1" -- "*" T_NNyA_MOTIVO_INTERVENCION
T_NNyA_MOTIVO_INTERVENCION "*" -- "1" T_MOTIVO_INTERVENCION


T_DEMANDA_PERSONA "*" -- "1" T_DEMANDA
T_PERSONA "1" -- "*" T_DEMANDA_PERSONA

T_VINCULO_PERSONA_NNyA "*" - "1" T_NNyA
T_VINCULO_PERSONA_NNyA "*" - "1" T_PERSONA
T_VINCULO_PERSONA_NNyA "*" - "1" T_VINCULO
T_VINCULO_PERSONA_PERSONA "*" - "1" T_PERSONA
T_VINCULO_PERSONA_PERSONA "*" - "1" T_PERSONA
T_VINCULO "1" --- "*" T_VINCULO_PERSONA_PERSONA

T_DEMANDA "*" -- "1" T_USUARIO_LINEA
T_USUARIO_LINEA "*" -- "1" T_VINCULO_USUARIO_LINEA

T_USUARIO_LINEA "*" -- "1" T_INSTITUCION_USUARIO_LINEA

T_USUARIO_LINEA "*" -- "1" T_RESPONSABLE
T_RESPONSABLE "*" -- "1" T_CARGO

T_DEMANDA "1" --- "*" T_VULNERACION
T_CATEGORIA_MOTIVO "1" -- "*" T_CATEGORIA_SUBMOTIVO
T_CATEGORIA_MOTIVO "1" -- "*" T_VULNERACION
T_CATEGORIA_SUBMOTIVO "1" -- "*" T_VULNERACION

T_VULNERACION "*" -- "1" T_GRAVEDAD_VULNERACION
T_VULNERACION "*" -- "1" T_URGENCIA_VULNERACION

T_PERSONA "1" -- "*" T_VULNERACION
T_PERSONA "1" -- "*" T_VULNERACION

T_ACTIVIDAD "*" ---- "1" T_DEMANDA
T_ACTIVIDAD "*" - "1" T_ACTIVIDAD_TIPO
T_ACTIVIDAD "*" - "1" T_INSTITUCION_ACTIVIDAD

T_RESPUESTA "*" -- "1" T_DEMANDA
T_RESPUESTA "*" - "1" T_INSTITUCION_RESPUESTA

T_DEMANDA_VINCULADA "*" - "1" T_DEMANDA
T_DEMANDA_VINCULADA "*" - "1" T_DEMANDA

T_DECISION "*" --- "1" T_DEMANDA
T_DEMANDA "1" -- "*" T_EVALUACIONES
T_EVALUACIONES "*" -- "1" T_INDICADORES_VALORACION

T_LEGAJO "1" - "1" T_NNyA

T_LEGAJO_ASIGNADO "*" - "1" T_USER
T_LEGAJO "1" - "*" T_LEGAJO_ASIGNADO

@enduml

' DemandasVinculadas = Conexiones de la demanda = caso1=fkDemanda, caso2=fkDemanda
' caratula = identificar legajo o expediente
' la caratula identifica el NNyA al que se le genera la demanda
' el legajo deberia estar relacionado con la caratula, ¿ osea el NNyA principal ?
